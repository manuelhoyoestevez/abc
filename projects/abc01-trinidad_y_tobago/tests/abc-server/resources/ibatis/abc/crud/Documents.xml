<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.Documents">


	<typeAlias alias="Documents" type="com.inetum.abc.server.model.abc.crud.DocumentsDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="DocumentsCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.Documents.create"/>
		<flushOnExecute statement="Abc.CRUD.Documents.update"/>
		<flushOnExecute statement="Abc.CRUD.Documents.modify"/>
		<flushOnExecute statement="Abc.CRUD.Documents.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.Documents.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.Documents.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.Documents.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			documents
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.Documents.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Documents.Fields" />
		FROM
			documents
		ORDER BY
			documents.ID_DOCUMENT	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			documents.ID_DOCUMENT
		FROM
			documents
		ORDER BY
			documents.ID_DOCUMENT
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="Documents" resultClass="java.lang.Long">

        SELECT
            documents.ID_DOCUMENT
        FROM
            documents

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Documents.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="Documents" resultClass="java.lang.Long">

        SELECT
            documents.ID_DOCUMENT
        FROM
            documents

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Documents.EqualFilter" />
        </dynamic>

        ORDER BY
            documents.ID_DOCUMENT

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="Documents" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			documents
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Documents.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="Documents" resultMap="Abc.Mapping.Documents.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Documents.Fields" />
		FROM
			documents
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Documents.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="Documents" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			documents
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Documents.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="Documents" resultMap="Abc.Mapping.Documents.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Documents.Fields" />
		FROM
			documents
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Documents.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="Documents" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            documents

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Documents.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.Documents.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Documents.Fields" />
		FROM
			documents
		WHERE
			ID_DOCUMENT = #idDocument:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            documents
        WHERE
            ID_DOCUMENT = #idDocument:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.Documents.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Documents.Fields" />
		FROM
			documents
		WHERE
			ID_DOCUMENT IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="Documents" resultMap="Abc.Mapping.Documents.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Documents.Fields" />
		FROM
			documents
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Documents.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="Documents" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            documents

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Documents.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="Documents">
	
		INSERT INTO documents
			(
				ID_OPERATION,
				ID_DOCUMENT_TYPE,
				DOCUMENT_NUMBER,
				ISSUING_COUNTRY_3C,
				ISSUING_DATE,
				EXPIRY_DATE,
				MODEL,
				CREATION_DATE
			)
		VALUES
			(
				#idOperation:BIGINT#,
				#idDocumentType:BIGINT#,
				#documentNumber:VARCHAR#,
				#issuingCountry3c:VARCHAR#,
				#issuingDate:TIMESTAMP#,
				#expiryDate:TIMESTAMP#,
				#model:VARCHAR#,
				#creationDate:TIMESTAMP#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idDocument">
			SELECT last_insert_id() AS ID_DOCUMENT FROM documents LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="Documents">
	
		UPDATE documents
		SET
			ID_OPERATION = #idOperation:BIGINT#,
			ID_DOCUMENT_TYPE = #idDocumentType:BIGINT#,
			DOCUMENT_NUMBER = #documentNumber:VARCHAR#,
			ISSUING_COUNTRY_3C = #issuingCountry3c:VARCHAR#,
			ISSUING_DATE = #issuingDate:TIMESTAMP#,
			EXPIRY_DATE = #expiryDate:TIMESTAMP#,
			MODEL = #model:VARCHAR#,
			CREATION_DATE = #creationDate:TIMESTAMP#
		WHERE
			ID_DOCUMENT = #idDocument:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="Documents">
	
		UPDATE documents
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idOperation">
				ID_OPERATION = #idOperation:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idDocumentType">
				ID_DOCUMENT_TYPE = #idDocumentType:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="documentNumber">
				DOCUMENT_NUMBER = #documentNumber:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="issuingCountry3c">
				ISSUING_COUNTRY_3C = #issuingCountry3c:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="issuingDate">
				ISSUING_DATE = #issuingDate:TIMESTAMP#
			</isNotNull>
			
			<isNotNull prepend="," property="expiryDate">
				EXPIRY_DATE = #expiryDate:TIMESTAMP#
			</isNotNull>
			
			<isNotNull prepend="," property="model">
				MODEL = #model:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="creationDate">
				CREATION_DATE = #creationDate:TIMESTAMP#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_DOCUMENT = #idDocument:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE documents

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idOperation">
                ID_OPERATION = #idOperation:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idDocumentType">
                ID_DOCUMENT_TYPE = #idDocumentType:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="documentNumber">
                DOCUMENT_NUMBER = #documentNumber:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="issuingCountry3c">
                ISSUING_COUNTRY_3C = #issuingCountry3c:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="issuingDate">
                ISSUING_DATE = #issuingDate:TIMESTAMP#
            </isNotNull>

            <isNotNull prepend="," property="expiryDate">
                EXPIRY_DATE = #expiryDate:TIMESTAMP#
            </isNotNull>

            <isNotNull prepend="," property="model">
                MODEL = #model:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="creationDate">
                CREATION_DATE = #creationDate:TIMESTAMP#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idDocument">
                documents.ID_DOCUMENT = #idDocument:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idOperation">
                documents.ID_OPERATION = #idOperation:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idDocumentType">
                documents.ID_DOCUMENT_TYPE = #idDocumentType:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="documentNumber">
                documents.DOCUMENT_NUMBER = #documentNumber:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="issuingCountry3c">
                documents.ISSUING_COUNTRY_3C = #issuingCountry3c:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="issuingDate">
                DATE(documents.ISSUING_DATE) = DATE(#issuingDate:TIMESTAMP#)
            </isNotNull>

            <isNotNull prepend="AND" property="expiryDate">
                DATE(documents.EXPIRY_DATE) = DATE(#expiryDate:TIMESTAMP#)
            </isNotNull>

            <isNotNull prepend="AND" property="model">
                documents.MODEL = #model:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="creationDate">
                DATE(documents.CREATION_DATE) = DATE(#creationDate:TIMESTAMP#)
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM documents
		WHERE
			ID_DOCUMENT = #idDocument:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM documents
		WHERE
			ID_DOCUMENT IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="Documents">
	
		DELETE FROM documents
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Documents.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM documents
		
	</delete>
	
	
</sqlMap>


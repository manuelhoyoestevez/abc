<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.SysTexts">


	<typeAlias alias="SysTexts" type="com.inetum.abc.server.model.abc.crud.SysTextsDto"/>
	
	
	<!-- Master Table (MEMORY) -->
	<!-- 
	<cacheModel id="SysTextsCache" type="MEMORY" readOnly="true">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.create"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.update"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.modify"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.SysTexts.deleteAll"/>
		<property name="reference-type" value="STRONG"/>
	</cacheModel>
 	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			sys_texts
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.SysTexts.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.SysTexts.Fields" />
		FROM
			sys_texts
		ORDER BY
			sys_texts.ID_TEXT	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			sys_texts.ID_TEXT
		FROM
			sys_texts
		ORDER BY
			sys_texts.ID_TEXT
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="SysTexts" resultClass="java.lang.Long">

        SELECT
            sys_texts.ID_TEXT
        FROM
            sys_texts

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.SysTexts.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="SysTexts" resultClass="java.lang.Long">

        SELECT
            sys_texts.ID_TEXT
        FROM
            sys_texts

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.SysTexts.EqualFilter" />
        </dynamic>

        ORDER BY
            sys_texts.ID_TEXT

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="SysTexts" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			sys_texts
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.SysTexts.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="SysTexts" resultMap="Abc.Mapping.SysTexts.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.SysTexts.Fields" />
		FROM
			sys_texts
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.SysTexts.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="SysTexts" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			sys_texts
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.SysTexts.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="SysTexts" resultMap="Abc.Mapping.SysTexts.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.SysTexts.Fields" />
		FROM
			sys_texts
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.SysTexts.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="SysTexts" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            sys_texts

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.SysTexts.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.SysTexts.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.SysTexts.Fields" />
		FROM
			sys_texts
		WHERE
			ID_TEXT = #idText:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            sys_texts
        WHERE
            ID_TEXT = #idText:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.SysTexts.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.SysTexts.Fields" />
		FROM
			sys_texts
		WHERE
			ID_TEXT IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="SysTexts" resultMap="Abc.Mapping.SysTexts.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.SysTexts.Fields" />
		FROM
			sys_texts
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.SysTexts.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="SysTexts" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            sys_texts

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.SysTexts.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="SysTexts">
	
		INSERT INTO sys_texts
			(
				ID_TEXT,
				CODE,
				TEXT,
				TEXT_ES
			)
		VALUES
			(
				#idText:BIGINT#,
				#code:VARCHAR#,
				#text:VARCHAR#,
				#textEs:VARCHAR#
			)
			
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="SysTexts">
	
		UPDATE sys_texts
		SET
			ID_TEXT = #idText:BIGINT#,
			CODE = #code:VARCHAR#,
			TEXT = #text:VARCHAR#,
			TEXT_ES = #textEs:VARCHAR#
		WHERE
			ID_TEXT = #idText:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="SysTexts">
	
		UPDATE sys_texts
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idText">
				ID_TEXT = #idText:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="code">
				CODE = #code:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="text">
				TEXT = #text:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="textEs">
				TEXT_ES = #textEs:VARCHAR#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_TEXT = #idText:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE sys_texts

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idText">
                ID_TEXT = #idText:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="code">
                CODE = #code:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="text">
                TEXT = #text:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="textEs">
                TEXT_ES = #textEs:VARCHAR#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idText">
                sys_texts.ID_TEXT = #idText:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="code">
                sys_texts.CODE = #code:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="text">
                sys_texts.TEXT = #text:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="textEs">
                sys_texts.TEXT_ES = #textEs:VARCHAR#
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM sys_texts
		WHERE
			ID_TEXT = #idText:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM sys_texts
		WHERE
			ID_TEXT IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="SysTexts">
	
		DELETE FROM sys_texts
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.SysTexts.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM sys_texts
		
	</delete>

	<update id="updateSysText" parameterClass="com.inetum.abc.server.rest.manager.catalogs.CatalogParams" >

		UPDATE sys_texts
		SET
		TEXT$language$ = #traduction:VARCHAR#
		WHERE
		ID_TEXT = #code:VARCHAR#


	</update>
	
	
</sqlMap>


<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.WorkflowTransitions">


	<typeAlias alias="WorkflowTransitions" type="com.inetum.abc.server.model.abc.crud.WorkflowTransitionsDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="WorkflowTransitionsCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.create"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.update"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.modify"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.WorkflowTransitions.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			workflow_transitions
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.WorkflowTransitions.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.WorkflowTransitions.Fields" />
		FROM
			workflow_transitions
		ORDER BY
			workflow_transitions.ID_WORKFLOW_TRANSITION	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			workflow_transitions.ID_WORKFLOW_TRANSITION
		FROM
			workflow_transitions
		ORDER BY
			workflow_transitions.ID_WORKFLOW_TRANSITION
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="WorkflowTransitions" resultClass="java.lang.Long">

        SELECT
            workflow_transitions.ID_WORKFLOW_TRANSITION
        FROM
            workflow_transitions

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="WorkflowTransitions" resultClass="java.lang.Long">

        SELECT
            workflow_transitions.ID_WORKFLOW_TRANSITION
        FROM
            workflow_transitions

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
        </dynamic>

        ORDER BY
            workflow_transitions.ID_WORKFLOW_TRANSITION

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="WorkflowTransitions" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			workflow_transitions
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.WorkflowTransitions.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="WorkflowTransitions" resultMap="Abc.Mapping.WorkflowTransitions.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.WorkflowTransitions.Fields" />
		FROM
			workflow_transitions
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.WorkflowTransitions.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="WorkflowTransitions" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			workflow_transitions
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="WorkflowTransitions" resultMap="Abc.Mapping.WorkflowTransitions.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.WorkflowTransitions.Fields" />
		FROM
			workflow_transitions
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="WorkflowTransitions" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            workflow_transitions

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.WorkflowTransitions.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.WorkflowTransitions.Fields" />
		FROM
			workflow_transitions
		WHERE
			ID_WORKFLOW_TRANSITION = #idWorkflowTransition:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            workflow_transitions
        WHERE
            ID_WORKFLOW_TRANSITION = #idWorkflowTransition:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.WorkflowTransitions.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.WorkflowTransitions.Fields" />
		FROM
			workflow_transitions
		WHERE
			ID_WORKFLOW_TRANSITION IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="WorkflowTransitions" resultMap="Abc.Mapping.WorkflowTransitions.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.WorkflowTransitions.Fields" />
		FROM
			workflow_transitions
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="WorkflowTransitions" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            workflow_transitions

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="WorkflowTransitions">
	
		INSERT INTO workflow_transitions
			(
				ID_WORKFLOW,
				ID_INITIAL_STATE,
				INITIAL_STATE,
				EVENT,
				GUARD,
				ID_FINAL_STATE,
				FINAL_STATE
			)
		VALUES
			(
				#idWorkflow:BIGINT#,
				#idInitialState:BIGINT#,
				#initialState:VARCHAR#,
				#event:VARCHAR#,
				#guard:VARCHAR#,
				#idFinalState:BIGINT#,
				#finalState:VARCHAR#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idWorkflowTransition">
			SELECT last_insert_id() AS ID_WORKFLOW_TRANSITION FROM workflow_transitions LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="WorkflowTransitions">
	
		UPDATE workflow_transitions
		SET
			ID_WORKFLOW = #idWorkflow:BIGINT#,
			ID_INITIAL_STATE = #idInitialState:BIGINT#,
			INITIAL_STATE = #initialState:VARCHAR#,
			EVENT = #event:VARCHAR#,
			GUARD = #guard:VARCHAR#,
			ID_FINAL_STATE = #idFinalState:BIGINT#,
			FINAL_STATE = #finalState:VARCHAR#
		WHERE
			ID_WORKFLOW_TRANSITION = #idWorkflowTransition:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="WorkflowTransitions">
	
		UPDATE workflow_transitions
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idWorkflow">
				ID_WORKFLOW = #idWorkflow:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idInitialState">
				ID_INITIAL_STATE = #idInitialState:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="initialState">
				INITIAL_STATE = #initialState:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="event">
				EVENT = #event:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="guard">
				GUARD = #guard:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="idFinalState">
				ID_FINAL_STATE = #idFinalState:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="finalState">
				FINAL_STATE = #finalState:VARCHAR#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_WORKFLOW_TRANSITION = #idWorkflowTransition:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE workflow_transitions

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idWorkflow">
                ID_WORKFLOW = #idWorkflow:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idInitialState">
                ID_INITIAL_STATE = #idInitialState:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="initialState">
                INITIAL_STATE = #initialState:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="event">
                EVENT = #event:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="guard">
                GUARD = #guard:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="idFinalState">
                ID_FINAL_STATE = #idFinalState:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="finalState">
                FINAL_STATE = #finalState:VARCHAR#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idWorkflowTransition">
                workflow_transitions.ID_WORKFLOW_TRANSITION = #idWorkflowTransition:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idWorkflow">
                workflow_transitions.ID_WORKFLOW = #idWorkflow:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idInitialState">
                workflow_transitions.ID_INITIAL_STATE = #idInitialState:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="initialState">
                workflow_transitions.INITIAL_STATE = #initialState:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="event">
                workflow_transitions.EVENT = #event:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="guard">
                workflow_transitions.GUARD = #guard:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="idFinalState">
                workflow_transitions.ID_FINAL_STATE = #idFinalState:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="finalState">
                workflow_transitions.FINAL_STATE = #finalState:VARCHAR#
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM workflow_transitions
		WHERE
			ID_WORKFLOW_TRANSITION = #idWorkflowTransition:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM workflow_transitions
		WHERE
			ID_WORKFLOW_TRANSITION IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="WorkflowTransitions">
	
		DELETE FROM workflow_transitions
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.WorkflowTransitions.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM workflow_transitions
		
	</delete>
	
	
</sqlMap>


<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.PersonalData">


	<typeAlias alias="PersonalData" type="com.inetum.abc.server.model.abc.crud.PersonalDataDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="PersonalDataCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.create"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.update"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.modify"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.PersonalData.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			personal_data
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.PersonalData.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.PersonalData.Fields" />
		FROM
			personal_data
		ORDER BY
			personal_data.ID_PERSONAL_DATA	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			personal_data.ID_PERSONAL_DATA
		FROM
			personal_data
		ORDER BY
			personal_data.ID_PERSONAL_DATA
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="PersonalData" resultClass="java.lang.Long">

        SELECT
            personal_data.ID_PERSONAL_DATA
        FROM
            personal_data

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.PersonalData.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="PersonalData" resultClass="java.lang.Long">

        SELECT
            personal_data.ID_PERSONAL_DATA
        FROM
            personal_data

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.PersonalData.EqualFilter" />
        </dynamic>

        ORDER BY
            personal_data.ID_PERSONAL_DATA

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="PersonalData" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			personal_data
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.PersonalData.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="PersonalData" resultMap="Abc.Mapping.PersonalData.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.PersonalData.Fields" />
		FROM
			personal_data
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.PersonalData.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="PersonalData" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			personal_data
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.PersonalData.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="PersonalData" resultMap="Abc.Mapping.PersonalData.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.PersonalData.Fields" />
		FROM
			personal_data
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.PersonalData.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="PersonalData" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            personal_data

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.PersonalData.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.PersonalData.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.PersonalData.Fields" />
		FROM
			personal_data
		WHERE
			ID_PERSONAL_DATA = #idPersonalData:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            personal_data
        WHERE
            ID_PERSONAL_DATA = #idPersonalData:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.PersonalData.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.PersonalData.Fields" />
		FROM
			personal_data
		WHERE
			ID_PERSONAL_DATA IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="PersonalData" resultMap="Abc.Mapping.PersonalData.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.PersonalData.Fields" />
		FROM
			personal_data
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.PersonalData.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="PersonalData" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            personal_data

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.PersonalData.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="PersonalData">
	
		INSERT INTO personal_data
			(
				ID_DOCUMENT,
				GIVEN_NAME,
				LAST_NAME,
				BIRTH_DATE,
				NATIONALITY,
				SEX,
				AGE,
				CREATION_DATE
			)
		VALUES
			(
				#idDocument:BIGINT#,
				#givenName:VARCHAR#,
				#lastName:VARCHAR#,
				#birthDate:TIMESTAMP#,
				#nationality:VARCHAR#,
				#sex:VARCHAR#,
				#age:SMALLINT#,
				#creationDate:TIMESTAMP#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idPersonalData">
			SELECT last_insert_id() AS ID_PERSONAL_DATA FROM personal_data LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="PersonalData">
	
		UPDATE personal_data
		SET
			ID_DOCUMENT = #idDocument:BIGINT#,
			GIVEN_NAME = #givenName:VARCHAR#,
			LAST_NAME = #lastName:VARCHAR#,
			BIRTH_DATE = #birthDate:TIMESTAMP#,
			NATIONALITY = #nationality:VARCHAR#,
			SEX = #sex:VARCHAR#,
			AGE = #age:SMALLINT#,
			CREATION_DATE = #creationDate:TIMESTAMP#
		WHERE
			ID_PERSONAL_DATA = #idPersonalData:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="PersonalData">
	
		UPDATE personal_data
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idDocument">
				ID_DOCUMENT = #idDocument:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="givenName">
				GIVEN_NAME = #givenName:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="lastName">
				LAST_NAME = #lastName:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="birthDate">
				BIRTH_DATE = #birthDate:TIMESTAMP#
			</isNotNull>
			
			<isNotNull prepend="," property="nationality">
				NATIONALITY = #nationality:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="sex">
				SEX = #sex:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="age">
				AGE = #age:SMALLINT#
			</isNotNull>
			
			<isNotNull prepend="," property="creationDate">
				CREATION_DATE = #creationDate:TIMESTAMP#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_PERSONAL_DATA = #idPersonalData:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE personal_data

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idDocument">
                ID_DOCUMENT = #idDocument:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="givenName">
                GIVEN_NAME = #givenName:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="lastName">
                LAST_NAME = #lastName:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="birthDate">
                BIRTH_DATE = #birthDate:TIMESTAMP#
            </isNotNull>

            <isNotNull prepend="," property="nationality">
                NATIONALITY = #nationality:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="sex">
                SEX = #sex:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="age">
                AGE = #age:SMALLINT#
            </isNotNull>

            <isNotNull prepend="," property="creationDate">
                CREATION_DATE = #creationDate:TIMESTAMP#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idPersonalData">
                personal_data.ID_PERSONAL_DATA = #idPersonalData:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idDocument">
                personal_data.ID_DOCUMENT = #idDocument:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="givenName">
                personal_data.GIVEN_NAME = #givenName:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="lastName">
                personal_data.LAST_NAME = #lastName:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="birthDate">
                DATE(personal_data.BIRTH_DATE) = DATE(#birthDate:TIMESTAMP#)
            </isNotNull>

            <isNotNull prepend="AND" property="nationality">
                personal_data.NATIONALITY = #nationality:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="sex">
                personal_data.SEX = #sex:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="age">
                personal_data.AGE = #age:SMALLINT#
            </isNotNull>

            <isNotNull prepend="AND" property="creationDate">
                DATE(personal_data.CREATION_DATE) = DATE(#creationDate:TIMESTAMP#)
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM personal_data
		WHERE
			ID_PERSONAL_DATA = #idPersonalData:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM personal_data
		WHERE
			ID_PERSONAL_DATA IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="PersonalData">
	
		DELETE FROM personal_data
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.PersonalData.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM personal_data
		
	</delete>
	
	
</sqlMap>


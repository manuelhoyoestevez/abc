<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.Cameras">


	<typeAlias alias="Cameras" type="com.inetum.abc.server.model.abc.crud.CamerasDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="CamerasCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.create"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.update"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.modify"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.Cameras.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			cameras
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.Cameras.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Cameras.Fields" />
		FROM
			cameras
		ORDER BY
			cameras.ID_CAMERA	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			cameras.ID_CAMERA
		FROM
			cameras
		ORDER BY
			cameras.ID_CAMERA
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="Cameras" resultClass="java.lang.Long">

        SELECT
            cameras.ID_CAMERA
        FROM
            cameras

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Cameras.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="Cameras" resultClass="java.lang.Long">

        SELECT
            cameras.ID_CAMERA
        FROM
            cameras

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Cameras.EqualFilter" />
        </dynamic>

        ORDER BY
            cameras.ID_CAMERA

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="Cameras" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			cameras
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Cameras.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="Cameras" resultMap="Abc.Mapping.Cameras.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Cameras.Fields" />
		FROM
			cameras
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Cameras.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="Cameras" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			cameras
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Cameras.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="Cameras" resultMap="Abc.Mapping.Cameras.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Cameras.Fields" />
		FROM
			cameras
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Cameras.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="Cameras" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            cameras

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Cameras.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.Cameras.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Cameras.Fields" />
		FROM
			cameras
		WHERE
			ID_CAMERA = #idCamera:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            cameras
        WHERE
            ID_CAMERA = #idCamera:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.Cameras.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Cameras.Fields" />
		FROM
			cameras
		WHERE
			ID_CAMERA IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="Cameras" resultMap="Abc.Mapping.Cameras.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Cameras.Fields" />
		FROM
			cameras
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Cameras.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="Cameras" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            cameras

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Cameras.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="Cameras">
	
		INSERT INTO cameras
			(
				ID_KIOSK,
				ID_GATE,
				CODE,
				NAME,
				ID_STATE,
				MAC_ADDRESS,
				IP_ADDRESS,
				PORT,
				LOGIN,
				PASSWORD
			)
		VALUES
			(
				#idKiosk:BIGINT#,
				#idGate:BIGINT#,
				#code:VARCHAR#,
				#name:VARCHAR#,
				#idState:BIGINT#,
				#macAddress:VARCHAR#,
				#ipAddress:VARCHAR#,
				#port:SMALLINT#,
				#login:VARCHAR#,
				#password:VARCHAR#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idCamera">
			SELECT last_insert_id() AS ID_CAMERA FROM cameras LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="Cameras">
	
		UPDATE cameras
		SET
			ID_KIOSK = #idKiosk:BIGINT#,
			ID_GATE = #idGate:BIGINT#,
			CODE = #code:VARCHAR#,
			NAME = #name:VARCHAR#,
			ID_STATE = #idState:BIGINT#,
			MAC_ADDRESS = #macAddress:VARCHAR#,
			IP_ADDRESS = #ipAddress:VARCHAR#,
			PORT = #port:SMALLINT#,
			LOGIN = #login:VARCHAR#,
			PASSWORD = #password:VARCHAR#
		WHERE
			ID_CAMERA = #idCamera:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="Cameras">
	
		UPDATE cameras
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idKiosk">
				ID_KIOSK = #idKiosk:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idGate">
				ID_GATE = #idGate:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="code">
				CODE = #code:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="name">
				NAME = #name:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="idState">
				ID_STATE = #idState:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="macAddress">
				MAC_ADDRESS = #macAddress:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="ipAddress">
				IP_ADDRESS = #ipAddress:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="port">
				PORT = #port:SMALLINT#
			</isNotNull>
			
			<isNotNull prepend="," property="login">
				LOGIN = #login:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="password">
				PASSWORD = #password:VARCHAR#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_CAMERA = #idCamera:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE cameras

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idKiosk">
                ID_KIOSK = #idKiosk:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idGate">
                ID_GATE = #idGate:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="code">
                CODE = #code:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="name">
                NAME = #name:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="idState">
                ID_STATE = #idState:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="macAddress">
                MAC_ADDRESS = #macAddress:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="ipAddress">
                IP_ADDRESS = #ipAddress:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="port">
                PORT = #port:SMALLINT#
            </isNotNull>

            <isNotNull prepend="," property="login">
                LOGIN = #login:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="password">
                PASSWORD = #password:VARCHAR#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idCamera">
                cameras.ID_CAMERA = #idCamera:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idKiosk">
                cameras.ID_KIOSK = #idKiosk:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idGate">
                cameras.ID_GATE = #idGate:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="code">
                cameras.CODE = #code:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="name">
                cameras.NAME = #name:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="idState">
                cameras.ID_STATE = #idState:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="macAddress">
                cameras.MAC_ADDRESS = #macAddress:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="ipAddress">
                cameras.IP_ADDRESS = #ipAddress:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="port">
                cameras.PORT = #port:SMALLINT#
            </isNotNull>

            <isNotNull prepend="AND" property="login">
                cameras.LOGIN = #login:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="password">
                cameras.PASSWORD = #password:VARCHAR#
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM cameras
		WHERE
			ID_CAMERA = #idCamera:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM cameras
		WHERE
			ID_CAMERA IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="Cameras">
	
		DELETE FROM cameras
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Cameras.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM cameras
		
	</delete>
	
	
</sqlMap>


<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.OperationStepsResults">


	<typeAlias alias="OperationStepsResults" type="com.inetum.abc.server.model.abc.crud.OperationStepsResultsDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="OperationStepsResultsCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.create"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.update"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.modify"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.OperationStepsResults.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			operation_steps_results
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.OperationStepsResults.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.OperationStepsResults.Fields" />
		FROM
			operation_steps_results
		ORDER BY
			operation_steps_results.ID_OPERATION_STEP_RESULT	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			operation_steps_results.ID_OPERATION_STEP_RESULT
		FROM
			operation_steps_results
		ORDER BY
			operation_steps_results.ID_OPERATION_STEP_RESULT
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="OperationStepsResults" resultClass="java.lang.Long">

        SELECT
            operation_steps_results.ID_OPERATION_STEP_RESULT
        FROM
            operation_steps_results

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="OperationStepsResults" resultClass="java.lang.Long">

        SELECT
            operation_steps_results.ID_OPERATION_STEP_RESULT
        FROM
            operation_steps_results

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
        </dynamic>

        ORDER BY
            operation_steps_results.ID_OPERATION_STEP_RESULT

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="OperationStepsResults" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			operation_steps_results
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.OperationStepsResults.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="OperationStepsResults" resultMap="Abc.Mapping.OperationStepsResults.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.OperationStepsResults.Fields" />
		FROM
			operation_steps_results
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.OperationStepsResults.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="OperationStepsResults" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			operation_steps_results
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="OperationStepsResults" resultMap="Abc.Mapping.OperationStepsResults.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.OperationStepsResults.Fields" />
		FROM
			operation_steps_results
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="OperationStepsResults" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            operation_steps_results

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.OperationStepsResults.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.OperationStepsResults.Fields" />
		FROM
			operation_steps_results
		WHERE
			ID_OPERATION_STEP_RESULT = #idOperationStepResult:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            operation_steps_results
        WHERE
            ID_OPERATION_STEP_RESULT = #idOperationStepResult:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.OperationStepsResults.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.OperationStepsResults.Fields" />
		FROM
			operation_steps_results
		WHERE
			ID_OPERATION_STEP_RESULT IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="OperationStepsResults" resultMap="Abc.Mapping.OperationStepsResults.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.OperationStepsResults.Fields" />
		FROM
			operation_steps_results
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="OperationStepsResults" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            operation_steps_results

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="OperationStepsResults">
	
		INSERT INTO operation_steps_results
			(
				ID_OPERATION,
				ID_STEP_TYPE,
				ID_STEP_RESULT,
				ID_EXTERNAL_RESULT,
				DESCRIPTION,
				STEP_DATA,
				CREATION_DATE
			)
		VALUES
			(
				#idOperation:BIGINT#,
				#idStepType:BIGINT#,
				#idStepResult:BIGINT#,
				#idExternalResult:BIGINT#,
				#description:VARCHAR#,
				#stepData:VARCHAR#,
				#creationDate:TIMESTAMP#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idOperationStepResult">
			SELECT last_insert_id() AS ID_OPERATION_STEP_RESULT FROM operation_steps_results LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="OperationStepsResults">
	
		UPDATE operation_steps_results
		SET
			ID_OPERATION = #idOperation:BIGINT#,
			ID_STEP_TYPE = #idStepType:BIGINT#,
			ID_STEP_RESULT = #idStepResult:BIGINT#,
			ID_EXTERNAL_RESULT = #idExternalResult:BIGINT#,
			DESCRIPTION = #description:VARCHAR#,
			STEP_DATA = #stepData:VARCHAR#,
			CREATION_DATE = #creationDate:TIMESTAMP#
		WHERE
			ID_OPERATION_STEP_RESULT = #idOperationStepResult:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="OperationStepsResults">
	
		UPDATE operation_steps_results
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idOperation">
				ID_OPERATION = #idOperation:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idStepType">
				ID_STEP_TYPE = #idStepType:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idStepResult">
				ID_STEP_RESULT = #idStepResult:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idExternalResult">
				ID_EXTERNAL_RESULT = #idExternalResult:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="description">
				DESCRIPTION = #description:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="stepData">
				STEP_DATA = #stepData:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="creationDate">
				CREATION_DATE = #creationDate:TIMESTAMP#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_OPERATION_STEP_RESULT = #idOperationStepResult:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE operation_steps_results

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idOperation">
                ID_OPERATION = #idOperation:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idStepType">
                ID_STEP_TYPE = #idStepType:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idStepResult">
                ID_STEP_RESULT = #idStepResult:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idExternalResult">
                ID_EXTERNAL_RESULT = #idExternalResult:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="description">
                DESCRIPTION = #description:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="stepData">
                STEP_DATA = #stepData:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="creationDate">
                CREATION_DATE = #creationDate:TIMESTAMP#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idOperationStepResult">
                operation_steps_results.ID_OPERATION_STEP_RESULT = #idOperationStepResult:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idOperation">
                operation_steps_results.ID_OPERATION = #idOperation:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idStepType">
                operation_steps_results.ID_STEP_TYPE = #idStepType:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idStepResult">
                operation_steps_results.ID_STEP_RESULT = #idStepResult:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idExternalResult">
                operation_steps_results.ID_EXTERNAL_RESULT = #idExternalResult:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="description">
                operation_steps_results.DESCRIPTION = #description:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="stepData">
                operation_steps_results.STEP_DATA = #stepData:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="creationDate">
                DATE(operation_steps_results.CREATION_DATE) = DATE(#creationDate:TIMESTAMP#)
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM operation_steps_results
		WHERE
			ID_OPERATION_STEP_RESULT = #idOperationStepResult:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM operation_steps_results
		WHERE
			ID_OPERATION_STEP_RESULT IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="OperationStepsResults">
	
		DELETE FROM operation_steps_results
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.OperationStepsResults.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM operation_steps_results
		
	</delete>
	
	
</sqlMap>


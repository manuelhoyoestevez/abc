<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.Users">


	<typeAlias alias="Users" type="com.inetum.abc.server.model.abc.crud.UsersDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="UsersCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.Users.create"/>
		<flushOnExecute statement="Abc.CRUD.Users.update"/>
		<flushOnExecute statement="Abc.CRUD.Users.modify"/>
		<flushOnExecute statement="Abc.CRUD.Users.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.Users.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.Users.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.Users.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			users
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.Users.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Users.Fields" />
		FROM
			users
		ORDER BY
			users.ID_USER	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			users.ID_USER
		FROM
			users
		ORDER BY
			users.ID_USER
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="Users" resultClass="java.lang.Long">

        SELECT
            users.ID_USER
        FROM
            users

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Users.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="Users" resultClass="java.lang.Long">

        SELECT
            users.ID_USER
        FROM
            users

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Users.EqualFilter" />
        </dynamic>

        ORDER BY
            users.ID_USER

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="Users" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			users
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Users.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="Users" resultMap="Abc.Mapping.Users.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Users.Fields" />
		FROM
			users
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Users.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="Users" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			users
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Users.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="Users" resultMap="Abc.Mapping.Users.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Users.Fields" />
		FROM
			users
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Users.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="Users" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            users

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Users.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.Users.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Users.Fields" />
		FROM
			users
		WHERE
			ID_USER = #idUser:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            users
        WHERE
            ID_USER = #idUser:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.Users.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Users.Fields" />
		FROM
			users
		WHERE
			ID_USER IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="Users" resultMap="Abc.Mapping.Users.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.Users.Fields" />
		FROM
			users
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Users.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="Users" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            users

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.Users.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="Users">
	
		INSERT INTO users
			(
				ACTIVE,
				NAME,
				SURNAME,
				SEX,
				LANGUAGE,
				TIMEZONE,
				EMAIL,
				PHONE,
				CREATION_DATE,
				DELETION_DATE
			)
		VALUES
			(
				#active:BIT#,
				#name:VARCHAR#,
				#surname:VARCHAR#,
				#sex:VARCHAR#,
				#language:VARCHAR#,
				#timezone:VARCHAR#,
				#email:VARCHAR#,
				#phone:VARCHAR#,
				#creationDate:TIMESTAMP#,
				#deletionDate:TIMESTAMP#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idUser">
			SELECT last_insert_id() AS ID_USER FROM users LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="Users">
	
		UPDATE users
		SET
			ACTIVE = #active:BIT#,
			NAME = #name:VARCHAR#,
			SURNAME = #surname:VARCHAR#,
			SEX = #sex:VARCHAR#,
			LANGUAGE = #language:VARCHAR#,
			TIMEZONE = #timezone:VARCHAR#,
			EMAIL = #email:VARCHAR#,
			PHONE = #phone:VARCHAR#,
			CREATION_DATE = #creationDate:TIMESTAMP#,
			DELETION_DATE = #deletionDate:TIMESTAMP#
		WHERE
			ID_USER = #idUser:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="Users">
	
		UPDATE users
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="active">
				ACTIVE = #active:BIT#
			</isNotNull>
			
			<isNotNull prepend="," property="name">
				NAME = #name:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="surname">
				SURNAME = #surname:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="sex">
				SEX = #sex:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="language">
				LANGUAGE = #language:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="timezone">
				TIMEZONE = #timezone:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="email">
				EMAIL = #email:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="phone">
				PHONE = #phone:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="creationDate">
				CREATION_DATE = #creationDate:TIMESTAMP#
			</isNotNull>
			
			<isNotNull prepend="," property="deletionDate">
				DELETION_DATE = #deletionDate:TIMESTAMP#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_USER = #idUser:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE users

        <dynamic prepend="SET">

            <isNotNull prepend="," property="active">
                ACTIVE = #active:BIT#
            </isNotNull>

            <isNotNull prepend="," property="name">
                NAME = #name:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="surname">
                SURNAME = #surname:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="sex">
                SEX = #sex:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="language">
                LANGUAGE = #language:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="timezone">
                TIMEZONE = #timezone:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="email">
                EMAIL = #email:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="phone">
                PHONE = #phone:VARCHAR#
            </isNotNull>

            <isNotNull prepend="," property="creationDate">
                CREATION_DATE = #creationDate:TIMESTAMP#
            </isNotNull>

            <isNotNull prepend="," property="deletionDate">
                DELETION_DATE = #deletionDate:TIMESTAMP#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idUser">
                users.ID_USER = #idUser:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="active">
                users.ACTIVE = #active:BIT#
            </isNotNull>

            <isNotNull prepend="AND" property="name">
                users.NAME = #name:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="surname">
                users.SURNAME = #surname:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="sex">
                users.SEX = #sex:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="language">
                users.LANGUAGE = #language:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="timezone">
                users.TIMEZONE = #timezone:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="email">
                users.EMAIL = #email:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="phone">
                users.PHONE = #phone:VARCHAR#
            </isNotNull>

            <isNotNull prepend="AND" property="creationDate">
                DATE(users.CREATION_DATE) = DATE(#creationDate:TIMESTAMP#)
            </isNotNull>

            <isNotNull prepend="AND" property="deletionDate">
                DATE(users.DELETION_DATE) = DATE(#deletionDate:TIMESTAMP#)
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM users
		WHERE
			ID_USER = #idUser:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM users
		WHERE
			ID_USER IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="Users">
	
		DELETE FROM users
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.Users.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM users
		
	</delete>
	
	
</sqlMap>


<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE sqlMap
		PUBLIC  "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
				"http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="Abc.CRUD.InstallationSteps">


	<typeAlias alias="InstallationSteps" type="com.inetum.abc.server.model.abc.crud.InstallationStepsDto"/>
	
	
 	<!-- Dynamic Table (LRU) -->
	<!--
	<cacheModel id="InstallationStepsCache" type="LRU">
		<flushInterval hours="24"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.create"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.update"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.modify"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.deleteById"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.deleteInIds"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.deleteByAny"/>
		<flushOnExecute statement="Abc.CRUD.InstallationSteps.deleteAll"/>
		<property name="size" value="1000" />
	</cacheModel>
	-->

	
	<!-- ====== countAll ====== -->

	<select id="countAll" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			installation_steps
			
	</select>
	
	
	<!-- ====== getAll ====== -->

	<select id="getAll" resultMap="Abc.Mapping.InstallationSteps.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.InstallationSteps.Fields" />
		FROM
			installation_steps
		ORDER BY
			installation_steps.ID_INSTALLATION_STEP	
			
	</select>
	
	
	<!-- ====== getAllIds ====== -->

	<select id="getAllIds" resultClass="java.lang.Long">
	
		SELECT
			installation_steps.ID_INSTALLATION_STEP
		FROM
			installation_steps
		ORDER BY
			installation_steps.ID_INSTALLATION_STEP
			
	</select>


	<!-- ====== getId ====== -->

    <select id="getId" parameterClass="InstallationSteps" resultClass="java.lang.Long">

        SELECT
            installation_steps.ID_INSTALLATION_STEP
        FROM
            installation_steps

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
        </dynamic>

    </select>


	<!-- ====== getIds ====== -->

    <select id="getIds" parameterClass="InstallationSteps" resultClass="java.lang.Long">

        SELECT
            installation_steps.ID_INSTALLATION_STEP
        FROM
            installation_steps

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
        </dynamic>

        ORDER BY
            installation_steps.ID_INSTALLATION_STEP

        <include refid="Abc.Includes.PAGINATE" />

    </select>

	
	<!-- ====== countFind ====== -->

	<select id="countFind" parameterClass="InstallationSteps" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			installation_steps
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.InstallationSteps.FindFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== find ====== -->

	<select id="find" parameterClass="InstallationSteps" resultMap="Abc.Mapping.InstallationSteps.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.InstallationSteps.Fields" />
		FROM
			installation_steps
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.InstallationSteps.FindFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>
	
	
	<!-- ====== countList ====== -->

	<select id="countList" parameterClass="InstallationSteps" resultClass="java.lang.Integer">
	
		SELECT
			COUNT(*)
		FROM
			installation_steps
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
		</dynamic>
		
	</select>
	
	
	<!-- ====== getList ====== -->

	<select id="getList" parameterClass="InstallationSteps" resultMap="Abc.Mapping.InstallationSteps.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.InstallationSteps.Fields" />
		FROM
			installation_steps
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
		</dynamic>
		
		<include refid="Abc.Includes.ORDER_BY" />
		<include refid="Abc.Includes.PAGINATE" />
		
	</select>


	<!-- ====== getMapList ====== -->

    <select id="getMapList" parameterClass="InstallationSteps" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            installation_steps

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
        </dynamic>

        <include refid="Abc.Includes.ORDER_BY" />
        <include refid="Abc.Includes.PAGINATE" />

    </select>
	
	
	<!-- ====== getById ====== -->

	<select id="getById" parameterClass="java.lang.Long" resultMap="Abc.Mapping.InstallationSteps.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.InstallationSteps.Fields" />
		FROM
			installation_steps
		WHERE
			ID_INSTALLATION_STEP = #idInstallationStep:BIGINT#
			 
	</select>


	<!-- ====== existsById ====== -->

    <select id="existsById" parameterClass="java.lang.Long" resultClass="java.lang.Integer">

        SELECT
            COUNT(*)
        FROM
            installation_steps
        WHERE
            ID_INSTALLATION_STEP = #idInstallationStep:BIGINT#

    </select>
	
	
	<!-- ====== getInIds ====== -->

	<select id="getInIds" parameterClass="java.lang.String" resultMap="Abc.Mapping.InstallationSteps.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.InstallationSteps.Fields" />
		FROM
			installation_steps
		WHERE
			ID_INSTALLATION_STEP IN ($ids$)
			
	</select>
	
	
	<!-- ====== get ====== -->

	<select id="get" parameterClass="InstallationSteps" resultMap="Abc.Mapping.InstallationSteps.TableMapping">
	
		SELECT
			<include refid="Abc.Mapping.InstallationSteps.Fields" />
		FROM
			installation_steps
			
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
		</dynamic>
		
	</select>


	<!-- ====== getMap ====== -->

    <select id="getMap" parameterClass="InstallationSteps" resultClass="java.util.LinkedHashMap">

        SELECT

        <iterate property="customColumns" conjunction=",">
            $customColumns[]$
        </iterate>

        FROM
            installation_steps

        <dynamic prepend="WHERE">
            <include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
        </dynamic>

    </select>
	
	
	<!-- ====== create ====== -->

	<insert id="create" parameterClass="InstallationSteps">
	
		INSERT INTO installation_steps
			(
				ID_INSTALLATION,
				ID_SYSTEM,
				ID_STEP_TYPE,
				ACTIVE,
				BLOCKING,
				ORDER_NUMBER,
				INITIAL_DATA_GETTER,
				DESCRIPTION
			)
		VALUES
			(
				#idInstallation:BIGINT#,
				#idSystem:BIGINT#,
				#idStepType:BIGINT#,
				#active:BIT#,
				#blocking:BIT#,
				#orderNumber:SMALLINT#,
				#initialDataGetter:VARCHAR#,
				#description:VARCHAR#
			)
			
		<selectKey resultClass="java.lang.Long" keyProperty="idInstallationStep">
			SELECT last_insert_id() AS ID_INSTALLATION_STEP FROM installation_steps LIMIT 1
		</selectKey>
		
	</insert>
	
	
	<!-- ====== update ====== -->

	<update id="update" parameterClass="InstallationSteps">
	
		UPDATE installation_steps
		SET
			ID_INSTALLATION = #idInstallation:BIGINT#,
			ID_SYSTEM = #idSystem:BIGINT#,
			ID_STEP_TYPE = #idStepType:BIGINT#,
			ACTIVE = #active:BIT#,
			BLOCKING = #blocking:BIT#,
			ORDER_NUMBER = #orderNumber:SMALLINT#,
			INITIAL_DATA_GETTER = #initialDataGetter:VARCHAR#,
			DESCRIPTION = #description:VARCHAR#
		WHERE
			ID_INSTALLATION_STEP = #idInstallationStep:BIGINT#
			
	</update>
	
	
	<!-- ====== modify ====== -->

	<update id="modify" parameterClass="InstallationSteps">
	
		UPDATE installation_steps
		
		<dynamic prepend="SET">
		
			<isNotNull prepend="," property="idInstallation">
				ID_INSTALLATION = #idInstallation:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idSystem">
				ID_SYSTEM = #idSystem:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="idStepType">
				ID_STEP_TYPE = #idStepType:BIGINT#
			</isNotNull>
			
			<isNotNull prepend="," property="active">
				ACTIVE = #active:BIT#
			</isNotNull>
			
			<isNotNull prepend="," property="blocking">
				BLOCKING = #blocking:BIT#
			</isNotNull>
			
			<isNotNull prepend="," property="orderNumber">
				ORDER_NUMBER = #orderNumber:SMALLINT#
			</isNotNull>

			<isNotNull prepend="," property="initialDataGetter">
				INITIAL_DATA_GETTER = #initialDataGetter:VARCHAR#
			</isNotNull>
			
			<isNotNull prepend="," property="description">
				DESCRIPTION = #description:VARCHAR#
			</isNotNull>
			
		</dynamic>
		
		WHERE
			ID_INSTALLATION_STEP = #idInstallationStep:BIGINT#
			
	</update>


	<!-- ====== modifyByAny ====== -->

    <!-- map("target", "filter")

    <update id="modifyByAny" parameterClass="java.util.Map">

        UPDATE installation_steps

        <dynamic prepend="SET">

            <isNotNull prepend="," property="idInstallation">
                ID_INSTALLATION = #idInstallation:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idSystem">
                ID_SYSTEM = #idSystem:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="idStepType">
                ID_STEP_TYPE = #idStepType:BIGINT#
            </isNotNull>

            <isNotNull prepend="," property="active">
                ACTIVE = #active:BIT#
            </isNotNull>

            <isNotNull prepend="," property="blocking">
                BLOCKING = #blocking:BIT#
            </isNotNull>

            <isNotNull prepend="," property="orderNumber">
                ORDER_NUMBER = #orderNumber:SMALLINT#
            </isNotNull>

            <isNotNull prepend="," property="description">
                DESCRIPTION = #description:VARCHAR#
            </isNotNull>

        </dynamic>

        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="idInstallationStep">
                installation_steps.ID_INSTALLATION_STEP = #idInstallationStep:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idInstallation">
                installation_steps.ID_INSTALLATION = #idInstallation:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idSystem">
                installation_steps.ID_SYSTEM = #idSystem:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="idStepType">
                installation_steps.ID_STEP_TYPE = #idStepType:BIGINT#
            </isNotNull>

            <isNotNull prepend="AND" property="active">
                installation_steps.ACTIVE = #active:BIT#
            </isNotNull>

            <isNotNull prepend="AND" property="blocking">
                installation_steps.BLOCKING = #blocking:BIT#
            </isNotNull>

            <isNotNull prepend="AND" property="orderNumber">
                installation_steps.ORDER_NUMBER = #orderNumber:SMALLINT#
            </isNotNull>

            <isNotNull prepend="AND" property="description">
                installation_steps.DESCRIPTION = #description:VARCHAR#
            </isNotNull>

        </dynamic>

    </update>
    -->
	
	
	<!-- ====== deleteById ====== -->

	<delete id="deleteById" parameterClass="java.lang.Long">
	
		DELETE FROM installation_steps
		WHERE
			ID_INSTALLATION_STEP = #idInstallationStep:BIGINT#
			
	</delete>
	
	
	<!-- ====== deleteInIds ====== -->

	<delete id="deleteInIds" parameterClass="java.lang.String">
	
		DELETE FROM installation_steps
		WHERE
			ID_INSTALLATION_STEP IN ($ids$)
		
	</delete>
	
	
	<!-- ====== deleteByAny ====== -->

	<delete id="deleteByAny" parameterClass="InstallationSteps">
	
		DELETE FROM installation_steps
		
		<dynamic prepend="WHERE">
			<include refid="Abc.Mapping.InstallationSteps.EqualFilter" />
		</dynamic>
		
	</delete>
	
	
	<!-- ====== deleteAll ====== -->

	<delete id="deleteAll">
	
		DELETE FROM installation_steps
		
	</delete>
	
	
</sqlMap>

